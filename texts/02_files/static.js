function xClaim(a) { this.partnerId = 0; this.JSONPCallback = xClaimSettings.JSONPCallback; this.jsonpUrl = xClaimSettings.jsonpUrl; this.xDataObj = null; this.xParser = null; this.xCore = new _xClaimCoreClass; this.start = function (a) { this.getData(a); this.parseData() }; this.getData = function (a) { var b = this; if (xClaimSettings.postRijeci) { setTimeout(function () { (new _xClaimCoreClass).jsonp.fetch(b.jsonpUrl, function (c) { b.xDataObj = new _xClaimData(c); b.xDataObj.start(a) }) }, xClaimSettings.TimeBeforeDisplayOglasiNew) } else { setTimeout(function () { b.xDataObj = new _xClaimData(xClaimSettings); b.xDataObj.start(a) }, xClaimSettings.TimeBeforeDisplayOglasiPrepared) } }; this.parseData = function () { if (xClaimSettings.postRijeci) { this.xParser = new _xClaimParser; this.xParser.start() } }; if (this instanceof xClaim) { this.partnerId = a; this.jsonpUrl = this.jsonpUrl + "?" + xClaimSettings.formInputPartnerIdName + "=" + this.partnerId + "&jsonp=" + this.JSONPCallback + "&" + xClaimSettings.formInputUrlName + "=" + escape(this.xCore.URL) } else { return new xClaim(a) } } function _xClaimParser() { this.iFrameHolderDiv = null; this.iFrameHolderDivID = xClaimSettings.iFrameHolderDivID; this.iframe = null; this.iframeName = xClaimSettings.iframeName; this.form = null; this.formInputText = null; this.formInputTextName = xClaimSettings.formInputTextName; this.formInputUrl = null; this.formInputUrlName = xClaimSettings.formInputUrlName; this.formInputPartnerId = null; this.postUrl = xClaimSettings.CrossDomainPost; this.submitTime = xClaimSettings.CrossDomainSubmitTime; this.wordsClean = new Array; this.core = new _xClaimCoreClass; this.SearchWrappers = null; this.text = ""; this.start = function () { this.CreateIframe(); this.SubmitForm() }; this.isDuplicate = function (a) { for (var b = 0; b < this.wordsClean.length; b++) { if (this.wordsClean[b] == a) return true } return false }; this.GetTextNodes = function () { for (xclaimWrapper in this.SearchWrappers) { this.GetNodes(this.SearchWrappers[xclaimWrapper]) } }; this.GetNodes = function (a) { if (a.nodeName == "#text") { this.text = this.text + " " + a.nodeValue } else if (typeof a.hasChildNodes == "function") { if (xClaimSettings.mSkipTags.test(a.tagName) == false && a.hasChildNodes() == true) { for (var b = 0; b < a.childNodes.length; b++) { this.GetNodes(a.childNodes[b]) } } } }; this.GetWords = function () { this.SearchWrappers = this.core.GetSearch(); this.GetTextNodes(); this.text = this.text.toLowerCase(); xClaimLog(xClaimSettings.origText); for (var a = 0; a < xClaimSettings.origText.length; a++) { this.text = this.text.replace(new RegExp(xClaimSettings.origText[a][0], xClaimSettings.origText[a][1]), xClaimSettings.replText[a]) } var b = this.text.split(" "); var c = ""; for (var a = 0; a < b.length; a++) { if (this.wordsClean.length < xClaimSettings.brojRijeci) { if (b[a].length > 2 && !this.isDuplicate(b[a])) { this.wordsClean.push(b[a]) } } } c = this.wordsClean.join(","); xClaimLog(c); return c }; this.CreateIframe = function () { this.iFrameHolderDiv = this.core.CreateElement("div", { id: this.iFrameHolderDivID, style: "display:none;" }, null); this.iFrameHolderDiv.style.display = "none"; this.iframe = this.core.CreateElement("iframe", { name: this.iframeName, id: this.iframeName }, null); this.form = this.core.CreateElement("form", { action: this.postUrl, method: "post", target: this.iframeName, id: this.iframeName }, null); this.formInputText = this.core.CreateElement("input", { type: "text", name: this.formInputTextName }, null); this.formInputUrl = this.core.CreateElement("input", { type: "text", name: this.formInputUrlName }, null); this.formInputPartnerId = this.core.CreateElement("input", { type: "text", name: xClaimSettings.formInputPartnerIdName }, null); document.body.appendChild(this.iFrameHolderDiv); this.iFrameHolderDiv.appendChild(this.iframe); this.iFrameHolderDiv.appendChild(this.form); this.form.appendChild(this.formInputUrl); this.form.appendChild(this.formInputPartnerId); this.form.appendChild(this.formInputText); self.frames[this.iframeName].name = this.iframeName }; this.SubmitForm = function () { xClaimThis = this; setTimeout(function () { if (xClaimThis.iFrameHolderDiv.hasChildNodes()) { while (xClaimThis.iFrameHolderDiv.childNodes.length >= 1) { xClaimThis.iFrameHolderDiv.removeChild(xClaimThis.iFrameHolderDiv.firstChild) } } }, this.submitTime); if (this.form != null) { this.formInputText.value = this.GetWords(); this.formInputUrl.value = this.core.URL; this.formInputPartnerId.value = xClaimSettings.Partner.Id; this.form.submit() } } } function _xClaimData(a) { this.mScriptLimit = xClaimSettings.mScriptLimit; this.mData = null; this.mCore = new _xClaimCoreClass; this.mTextNodes = new Array; this.mSearchWrappers = new Array; this.mOglasi = new Array; this.mSkipTags = xClaimSettings.mSkipTags; this.mClassa = xClaimSettings.mClassa; this.mOglasiDoomId = new Array; this.mOglasiCount = 0; this.mDubinaRekurzije = xClaimSettings.CheckParentsRecursionLimit; this.AktivniOglas; if (this instanceof _xClaimData) { this.mData = a } this.start = function (a) { this.InitStyle(); this.GetSearchWrappers(); this.GetOglasi(); this.GetTextNodes(); this.PostaviOglase(); if ("function" == typeof a) { a() } }; this.GetTextNodes = function () { this.mTextNodes = new Array; for (xclaimWrapper in this.mSearchWrappers) { this.GetNodes(this.mSearchWrappers[xclaimWrapper]) } }; this.GetNodes = function (a) { if (a.nodeName == "#text") { this.mTextNodes.push(a) } else if (typeof a.hasChildNodes == "function" || typeof a.hasChildNodes == "object") { if (a.hasChildNodes()) { for (var b = 0; b < a.childNodes.length; b++) { this.GetNodes(a.childNodes[b]) } } } }; this.PostaviOglase = function () { xClaimLog(this.mOglasi); for (var a = 0; a < this.mOglasi.length; a++) { var b = this.mOglasi[a]; if (b != undefined) { var c = b["FullWordText"].toLowerCase(); var d = false; function e(a, b) { return Math.floor(Math.random() * (b - a + 1) + a) } randomBroj = e(0, this.mTextNodes.length); for (var f = 0; f < this.mTextNodes.length; f++) { if (this.mOglasiCount < xClaimSettings.Partner.BrojRijeci) { var g = (f + randomBroj) % this.mTextNodes.length; var h = this.mTextNodes[g]; var i = " "; i = i + h.nodeValue.toLowerCase(); var j = h.nodeValue; var k = i.indexOf(" " + c); var l = k; if (k >= 0) { if (this.CheckParents(h)) { var m = j.substring(0, k); var n = j.substring(k); var o = ""; var p = c.length; if (n.length != p) { o = n.substring(0, p); n = n.substring(p) } else { o = n; n = "" } var q = true; if (n.length > 0) { var r = n.charAt(0); if (xClaimSettings.mTestWordEnd.indexOf(r) == -1) { q = false } } if (q && !d) { d = true; this.PostaviLinkOglasa(h, m, o, n, b) } } } } } } } }; this.PostaviLinkOglasa = function (a, b, c, d, e) { if (this.mOglasiCount < xClaimSettings.Partner.BrojRijeci) { this.mOglasiCount = this.mOglasiCount + 1; var f = xClaimSettings.OglasIdPrefix + e.Id + "-" + this.mOglasiCount; a.data = b; this.mOglasiDoomId[f] = e; var g = this.mCore.CreateElement("a", { "class": this.mClassa, target: "_blank", id: f, style: xClaimSettings.Partner.StyleRijeci }, c); if (e.WordUnderline == false) { g = this.mCore.CreateElement("span", { "class": this.mClassa, id: f, style: xClaimSettings.Partner.StyleRijeci }, c) } this.mCore.InsertAfter(a, g); a = a.nextSibling; this.InitOblacic(a, e); var h = this.mCore.CreateElement(null, null, d); this.mCore.InsertAfter(a, h); if (xClaimSettings.Partner.StyleRijeci.indexOf(";") > 0) { try { var i = new Array; i = xClaimSettings.Partner.StyleRijeci.split(";"); for (var k in i) { if (i[k].indexOf(":")) { var l = new Array; l = i[k].split(":"); var m = ""; var n = l[0]; if (n != "") { var o = n.toLowerCase().split("-"); for (j in o) { if (j == 0) { m = o[0] } else { m = m + o[1].charAt(0).toUpperCase() + o[1].substring(1) } } g.style[m] = l[1] } } } } catch (p) { xClaimLog(p) } } } this.GetTextNodes() }; this.GetScrollY = function () { if (window.pageYOffset) { return window.pageYOffset } else { return document.body.scrollTop } }; this.GetScrollX = function () { if (window.pageXOffset) { return window.pageXOffset } else { return document.body.scrollLeft } }; this.GetRealPosition = function (a) { var b = { node: { left: 0, top: 0, width: 0, height: 0 }, window: { scrollLeft: 0, scrollTop: 0, width: 0, height: 0} }; var c = 0; var d = false; if (a == null) { return null } var e = 0; var f = 0; var g = 0; var h = 0; var i = null; var j = null; j = a.offsetParent; var k = a; var l = a; while (l.parentNode != null && c < 2e3) { l = l.parentNode; if (l.offsetParent == null) { } else { var m = true; if (d && window.opera) { if (l == k.parentNode || l.nodeName == "TR") { m = false } } if (m) { if (l.scrollTop && l.scrollTop > 0) { f -= l.scrollTop } if (l.scrollLeft && l.scrollLeft > 0) { e -= l.scrollLeft } } } if (l == j) { e += a.offsetLeft; if (l.clientLeft && l.nodeName != "TABLE") { e += l.clientLeft } f += a.offsetTop; if (l.clientTop && l.nodeName != "TABLE") { f += l.clientTop } a = l; if (a.offsetParent == null) { if (a.offsetLeft) { e += a.offsetLeft } if (a.offsetTop) { f += a.offsetTop } } j = a.offsetParent } c++ } if (k.offsetWidth) { b.node.width = k.offsetWidth } if (k.offsetHeight) { b.node.height = k.offsetHeight } b.node.left = e - document.body.offsetLeft; b.node.top = f - document.body.offsetTop; b.window.scrollLeft = this.GetScrollX(); b.window.scrollTop = this.GetScrollY(); b.window.width = window.innerWidth; b.window.height = window.innerHeight; return b }; this.InitOblacic = function (a, b) { var c = this; a.onmouseover = function () { var a = this.id; clearTimeout(AktivniOglasiTimerArray[a]); AktivniOglasiTimerArray[a] = null; xClaimLog("enter - " + this.id); c.AktivniOglas = a; xClaimTimerOpen[a] = setTimeout(function (a) { xClaimLog("try open - " + c.AktivniOglas); if (xClaimTimerOpen[c.AktivniOglas]) { c.PokaziOblacic(a) } }, xClaimSettings.TimeBeforeOpen) }; a.onmouseout = function () { xClaimLog("out - " + this.id); c.AktivniOglas = null; clearTimeout(xClaimTimerOpen[this.id]); xClaimTimerOpen[this.id] == null; if (document.getElementById(xClaimSettings.OblacicIdPrefix + this.id) != null) { if (document.getElementById(xClaimSettings.OblacicIdPrefix + this.id).className.indexOf("xClaimDragged") == -1) { c.SakrijOblacic(this.id) } } } }; this.SakrijOblacic = function (a) { var b = setTimeout(function () { XClaimBanner.BannerSakrijOblacic(a) }, xClaimSettings.TimeBeforeClose); AktivniOglasiTimerArray[a] = b }; this.CreateBanner = function (a, b) { var c = { codebase: "http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,28,0", width: a.AdWidth, height: a.AdHeight, wmode: "transparent", id: "object-" + b }; var d = new Array; var e = { mouseEnter: "XClaimBanner.BannerHover('" + b + "')", mouseOut: "XClaimBanner.BannerSakrijOblacic('" + b + "')", onClose: "XClaimBanner.BannerSakrijOblacic('" + b + "')", logoPartner: xClaimSettings.Partner.CustomLogo, logopartnerLink: xClaimSettings.Partner.CustomLogoLink, bannerXml: a.XmlDataLink, clickTAG: a.AdLink, currentWord: a.FullWordText }; for (xclaimFlashItem in e) { d.push(xclaimFlashItem + "=" + escape(e[xclaimFlashItem])) } d = d.join("&"); var f = { type: "application/x-shockwave-flash", src: xClaimSettings.ProzorFlash, movie: xClaimSettings.ProzorFlash, classid: "clsid:D27CDB6E-AE6D-11CF-96B8-444553540000", quality: "high", flashvars: d, width: a.AdWidth, height: a.AdHeight, wmode: "transparent", allowscriptaccess: "always", swliveconnect: "true", name: "object-" + b }; var g = this.mCore.CreateElement("object", c, null); var h = this.mCore.CreateElement("noembed", null, null); var i = this.mCore.CreateElement("embed", f, null); if (this.mCore.isIE() == false) { g.appendChild(i); g.appendChild(h) } else { var j = this.mCore.CreateElement("div", { "class": "objectHolder" }, null); j.appendChild(i); return j } for (x in f) { var k = { name: x, value: f[x] }; g.appendChild(this.mCore.CreateElement("param", k, null)) } return g }; this.PokaziOblacic = function (a) { var b = xClaimSettings.OblacicIdPrefix + this.AktivniOglas; var c = this.mOglasiDoomId[this.AktivniOglas]; var d = document.getElementById(b); var e = this.AktivniOglas; var f = c.AdLink; if (c.WordUnderline == true) { setTimeout(function () { doomLink = document.getElementById(e); if (doomLink && !doomLink.getAttribute("href")) { doomLink.setAttribute("href", f) } }, 1e3) } var g = new Image; g.src = xClaimSettings.StatistikaImg + xClaimSettings.formInputOglasIdName + "=" + c.Id + "&time=" + Math.floor(Math.random() * 1e5) + "&" + xClaimSettings.formInputPartnerIdName + "=" + xClaimSettings.Partner.Id + "&" + xClaimSettings.formInputUrlName + "=" + escape(this.mCore.URL); iframeId = "iframe-" + b; var h = document.getElementById(iframeId); if (!h) { if (c.AdditionalJSData != null && c.AdditionalJSData != "") { h = this.mCore.CreateElement("iframe", { id: iframeId, name: iframeId, src: xClaimSettings.IframeJsData + c.AdditionalJSData }, null); h.style.display = "none"; document.body.appendChild(h) } } if (d) { if (d.style.left == "-3000px") { this.FixPozicija(c, document.getElementById(this.AktivniOglas), d); var i = XClaimBanner.thisMovie("object-" + this.AktivniOglas); if (i) { if (typeof i.videoPlay == "function") { xClaimLog("videoPlay()"); i.videoPlay() } else { xClaimLog("No method for videoPlay") } } } return } else { d = this.mCore.CreateElement("div", { "class": xClaimSettings.xClaimOblacicClass, id: b }, null); d.style.display = "block"; d.style.width = c.AdWidth + "px"; d.style.height = c.AdHeight + "px"; d.style.position = "absolute"; var j = this; d.onmouseover = function () { var a = this.id; a = a.replace(xClaimSettings.OblacicIdPrefix, ""); xClaimLog("oblacic enter - " + a); clearTimeout(AktivniOglasiTimerArray[a]); AktivniOglasiTimerArray[a] = null; j.AktivniOglas = a }; d.onmouseout = function () { var a = this.id; a = a.replace(xClaimSettings.OblacicIdPrefix, ""); xClaimLog("oblacic out - " + a); if (this.className.indexOf("xClaimDragged") == -1) { j.AktivniOglas = null; clearTimeout(xClaimTimerOpen[a]); j.SakrijOblacic(a) } }; var k = document.getElementById(xClaimSettings.xClaimTopElementId); if (!k) { k = this.mCore.CreateElement("div", { id: xClaimSettings.xClaimTopElementId }, null); document.body.insertBefore(k, document.body.firstChild) } d.appendChild(this.CreateBanner(c, this.AktivniOglas)); this.FixPozicija(c, document.getElementById(this.AktivniOglas), d); XClaimBanner.dragDropxClaim.initElement(d) } }; this.FixPozicija = function (a, b, c) { if (c == null) { return } var d = true; if (document.getElementById(c.id)) { c = document.getElementById(c.id); d = false } else { } var e = this.GetRealPosition(document.getElementById(this.AktivniOglas)); var f = { top: 0, left: 0, width: 0, height: 0 }; f.top = e.node.top + e.node.height + xClaimSettings.OglasPozicijaTop; f.left = e.node.left + xClaimSettings.OglasPozicijaLeft; f.width = a.AdWidth; f.height = a.AdHeight; var g = true; if (e.node.top - e.window.scrollTop > a.AdHeight + xClaimSettings.OglasPozicijaTop) { var h = f.top + 0; f.top = e.node.top - xClaimSettings.OglasPozicijaTop - a.AdHeight; if (this.DaLiSmetam(f) == true) { f.top = h } } if (f.left + a.AdWidth > e.window.scrollLeft + e.window.width) { var h = f.left + 0; f.left = e.node.left + e.node.width - a.AdWidth - xClaimSettings.OglasPozicijaLeft; if (f.left > 0) { if (this.DaLiSmetam(f) == true) { f.left = h } } } c.style.top = f.top + "px"; c.style.left = f.left + "px"; if (d) { document.body.appendChild(c) } }; this.DaLiSmetam = function (a) { var b = false; var c = { top: 0, left: 0, width: 0, height: 0 }; c = a; var d = new Array; d = xClaimSettings.OblacicFixElements.split("|"); for (var e = 0; e < d.length; e++) { var f = document.getElementsByTagName(d[e]); for (var g = 0; g < f.length; g++) { if (this.JesuUPresjeku(c, f[g]) == true) { return true } } } return b }; this.JesuUPresjeku = function (a, b) { if (this.isDisplayed(b)) { var c = false; var d = this.GetRealPosition(b).node; var e = Math.min(a.left, d.left); var f = Math.max(a.left + a.width, d.left + d.width); if (f - e < a.width + d.width) { c = true } var e = Math.min(a.top, d.top); var f = Math.max(a.top + a.height, d.top + d.height); if (f - e < a.height + d.height) { if (c == true) { return true } } } return false }; this.findEffectiveStyle = function (a) { if (a.style == undefined) { return undefined } if (window.getComputedStyle) { return window.getComputedStyle(a, null) } if (a.currentStyle) { return a.currentStyle } if (window.document.defaultView && window.document.defaultView.getComputedStyle) { return window.document.defaultView.getComputedStyle(a, null) } return undefined }; this.isDisplayed = function (a) { if (a.id.indexOf(xClaimSettings.OblacicIdPrefix) == 0) { return false } var b = this.findEffectiveStyleProperty(a, "display"); var c = this.findEffectiveStyleProperty(a, "visibility"); if (b == "none" || c == "hidden") return false; if (a.parentNode.style) { return this.isDisplayed(a.parentNode) } return true }; this.findEffectiveStyleProperty = function (a, b) { var c = this.findEffectiveStyle(a); if (c == undefined) { return undefined } var d = c[b]; if (d == "inherit" && a.parentNode.style) { return this.findEffectiveStyleProperty(a.parentNode, b) } return d }; this.CheckParents = function (a) { var b = a.parentNode; var c = this.mDubinaRekurzije; while (b) { if (c == 0) return true; if (this.mSkipTags.test(b.tagName)) return false; if (b.onclick || b.onmouseover || b.onmouseout || b.onmousedown || b.onmouseup) return false; b = b.parentNode; c-- } return true }; this.GetOglasi = function () { if (this.mData != null) { this.mOglasi = this.mData.Oglasi } }; this.GetSearchWrappers = function () { this.mSearchWrappers = this.mCore.GetSearch() }; this.InitStyle = function () { if (this.mData != null && this.mData.css != undefined) { var a = this.mCore.CreateElement("link", { rel: "stylesheet", type: "text/css", href: this.mData.css }, null); this.mCore.AddElementToHead(a) } } } function _xClaimCoreClass() { this.mSearchingDiv = xClaimSettings.SearchingDiv; this.mSearchingId = xClaimSettings.SearchingId; this.URL = document.location.href; this.jsonp = { callbackCounter: 0, JSONPCallback: xClaimSettings.JSONPCallback, fetch: function (a, b) { var c = this.JSONPCallback + "_" + this.callbackCounter++; window[c] = this.evalJSONP(b); a = a.replace("=" + this.JSONPCallback, "=" + c); var d = document.createElement("SCRIPT"); d.src = a; document.getElementsByTagName("HEAD")[0].appendChild(d) }, evalJSONP: function (callback) { return function (data) { var validJSON = false; if (typeof data == "string") { try { validJSON = eval(data) } catch (e) { } } else { validJSON = data } if (validJSON) { callback(validJSON) } else { throw "JSONP call returned invalid or empty JSON" } } } }; this.GetSearch = function () { var a = this.getAllByClass(this.mSearchingDiv); if (a.length == 0) { if (document.getElementById(xClaimSettings.SearchingId) != null) { a = new Array; a.push(document.getElementById(this.mSearchingId)) } else { a = new Array; a.push(document.body) } } return a }; this.isIE = function () { var a = navigator.appName; if (a.indexOf("Microsof") != -1) { return true } return false }; this.CreateElement = function (a, b, c) { if (a != null) { var d = document.createElement(a); if (b != null) { for (x in b) { if (typeof b[x] == "function") { this.addEventSimple(d, x, b[x]) } else { d.setAttribute(x, b[x]); if (x == "class") { d.className = b[x] } } } } if (c != null) { var e = document.createTextNode(c.toString()); d.appendChild(e) } return d } else if (c != null) { return document.createTextNode(c.toString()) } return null }; this.getElementsByClassName = function (a, b, c) { var d = new RegExp("(^|\\s)" + a + "(\\s|$)"); var b = b || "*"; var c = c || document; var e = b == "*" && c.all ? c.all : c.getElementsByTagName(b); var f = []; var g; var h = e.length; for (var i = 0; i < h; i++) { g = e[i]; if (d.test(g.className)) { f.push(g) } } return f }; this.getAllByClass = function (a) { if (document.getElementsByClassName) { return document.getElementsByClassName(a) } return this.getElementsByClassName(a, "*", document) }; this.AddElementToHead = function (a) { document.getElementsByTagName("head")[0].appendChild(a) }; this.InsertAfter = function (a, b) { a.parentNode.insertBefore(b, a.nextSibling) }; this.addEventSimple = function (a, b, c) { if (a.addEventListener) a.addEventListener(b, c, false); else if (a.attachEvent) a.attachEvent("on" + b, c) }; this.removeEventSimple = function (a, b, c) { if (a.removeEventListener) a.removeEventListener(b, c, false); else if (a.detachEvent) a.detachEvent("on" + b, c) } } function xClaimLog(a) { try { if (typeof console != "undefined") { if (typeof console.log != "undefined") { if (xClaimSettings.Partner.TestPartner == true && logCount > 0) { logCount--; if (a == null) { xClaimLog("NULL") } else console.log(a) } } } } catch (b) { } } var logCount = 1e3; var xclaimEngine = null; var xClaimTimerOpen = new Array; var AktivniOglasiTimerArray = new Array; var XClaimBanner = { BannerSakrijOblacic: function (a) { xClaimLog("XClaimBanner.BannerSakrijOblacic('" + a + "') funct called"); var b = document.getElementById(a); if (b) { var c = document.getElementById(xClaimSettings.OblacicIdPrefix + a); if (c != null) { if (c.style.left != "-3000px") { var d = XClaimBanner.thisMovie("object-" + a); if (d != null && typeof d.videoStop == "function") { d.videoStop(); xClaimLog("videoStop() call on flash Object "); c.style.left = "-3000px"; c.style.top = "-3000px"; c.className = c.className.replace(/xClaimDragged/, "") } else { xClaimLog("Object must be removed because there is no videoStop function "); c.parentNode.removeChild(c) } } } attr = b.getAttribute("href"); if (attr) { b.removeAttribute("href") } iframe = document.getElementById("iframe-" + xClaimSettings.OblacicIdPrefix + a); if (iframe) { iframe.parentNode.removeChild(iframe) } return true } return false }, thisMovie: function (a) { xClaimLog(a); if (navigator.appName.indexOf("Microsoft") != -1) { return window[a] } else { return document[a] } if (navigator.appName.indexOf("Microsoft Internet") == -1) { if (document.embeds && document.embeds[a]) { return document.embeds[a] } } else { return document.getElementById(a) } return null }, BannerHover: function (a) { if (AktivniOglasiTimerArray(a)) { clearTimeout(AktivniOglasiTimerArray[a]); AktivniOglasiTimerArray[DoomId] = null; return true } return false }, dragDropxClaim: { keySpeed: 10, initialMouseX: undefined, initialMouseY: undefined, startX: undefined, startY: undefined, dXKeys: undefined, dYKeys: undefined, draggedObject: undefined, core: new _xClaimCoreClass, initElement: function (a) { if (xClaimSettings.DragAndDrop) { if (typeof a == "string") { a = document.getElementById(a) } var b = XClaimBanner.dragDropxClaim.core.CreateElement("div", { "class": "DragMe" }, null); var c = XClaimBanner.dragDropxClaim.core.CreateElement("img", null, null); b.onmousedown = function (a) { var b = a || window.event; XClaimBanner.dragDropxClaim.startDrag(this, b) }; a.appendChild(b); b.appendChild(c) } }, startDragMouse: function (a) { var b = a || window.event; if (typeof b.preventDefault == "function") { b.preventDefault() } xClaimLog("DragStart"); XClaimBanner.dragDropxClaim.initialMouseX = b.clientX; XClaimBanner.dragDropxClaim.initialMouseY = b.clientY; document.onmousemove = XClaimBanner.dragDropxClaim.dragMouse; document.onmouseup = XClaimBanner.dragDropxClaim.releaseElement; return false }, startDrag: function (a, b) { if (typeof b.preventDefault == "function") { b.preventDefault() } a = a.parentNode; XClaimBanner.dragDropxClaim.draggedObject = a; XClaimBanner.dragDropxClaim.startX = a.offsetLeft; XClaimBanner.dragDropxClaim.startY = a.offsetTop; a.className = a.className.replace(/xClaimDragged/, ""); a.className += " dragged xClaimDragged"; XClaimBanner.dragDropxClaim.startDragMouse(b) }, dragMouse: function (a) { var b = a || window.event; var c = b.clientX - XClaimBanner.dragDropxClaim.initialMouseX; var d = b.clientY - XClaimBanner.dragDropxClaim.initialMouseY; XClaimBanner.dragDropxClaim.setPosition(c, d); return false }, setPosition: function (a, b) { XClaimBanner.dragDropxClaim.draggedObject.style.left = XClaimBanner.dragDropxClaim.startX + a + "px"; XClaimBanner.dragDropxClaim.draggedObject.style.top = XClaimBanner.dragDropxClaim.startY + b + "px" }, releaseElement: function (a) { var b = a || window.event; if (typeof b.preventDefault == "function") { b.preventDefault() } xClaimLog("DragStop - " + XClaimBanner.dragDropxClaim.draggedObject.id); document.onmousemove = null; document.onmouseup = null; if (XClaimBanner.dragDropxClaim.draggedObject) { XClaimBanner.dragDropxClaim.draggedObject.className = XClaimBanner.dragDropxClaim.draggedObject.className.replace(/dragged/, ""); XClaimBanner.dragDropxClaim.draggedObject = null } } } }; xclaimEngine = new xClaim(xClaimSettings.Partner.Id); xclaimEngine.start();